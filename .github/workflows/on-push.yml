name: On push

on:
  push:
    branches-ignore:
      - release
    paths:
      - 'src/*'
      - 'tests/*'
      - 'Dockerfile'
  workflow_dispatch:

env:
  PLATFORMS: "linux/386,linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64/v8,linux/ppc64le,linux/riscv64,linux/s390x"
  
jobs:
  build_and_push:
    name: Test, build and push Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Install shellcheck
        run: sudo apt-get install -y bash shellcheck
      - name: Analyse with shellcheck
        run: |
          set -e
          shellcheck -V
          shellcheck src/*.sh tests/*.sh
          set +e
      - name: Install buildx
        uses: docker/setup-buildx-action@v2.7.0
      - name: Login to docker hub
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.2.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}
      - name: Run tests
        run: |
          echo "Start running tests"
          ./tests/run_all_tests.sh "${{ github.repository }}" "ghcr.io" "${{ github.repository_owner }}" "${{ github.token }}"
          echo "Done running tests"
      - name: Extract tag string
        id: git
        shell: bash
        run: |
          RELEASE_VERSION="dev-$(date +%s)"
          echo "image_tag=${RELEASE_VERSION}" >> ${GITHUB_OUTPUT}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Build and push ${{ github.repository }}:${{ steps.git.outputs.image_tag }}
        uses: docker/build-push-action@v4.1.1
        with:
          platforms: ${{ env.PLATFORMS }}
          push: true
          tags: |
            ${{ github.repository }}:${{ steps.git.outputs.image_tag }}
            ${{ github.repository }}:development
            ghcr.io/${{ github.repository }}:${{ steps.git.outputs.image_tag }}
            ghcr.io/${{ github.repository }}:development
      # - name: Post push tests
      #   run: |
      #     echo "Start running tests"
      #     export GANTRY_TEST_CONTAINER_REPO_TAG="${{ github.repository }}:${{ steps.git.outputs.image_tag }}"
      #     export GANTRY_TEST_ENABLE_TESTS="new_image"
      #     ./tests/run_all_tests.sh "${{ github.repository }}" "ghcr.io" "${{ github.repository_owner }}" "${{ github.token }}"
      #     echo "Done running tests"
      - name: Delete old test images
        uses: snok/container-retention-policy@v2
        with:
          image-names: gantry
          # leave some margins in case multiple actions run in parallel
          cut-off: 10 minutes ago UTC
          account-type: personal
          token: ${{ secrets.TOKEN_DELETE_GHCR_IMAGES }}
          keep-at-least: 1
          skip-tags: latest, development
          filter-tags: "for-test-*"
          dry-run: False
      - name: Delete untagged images
        uses: snok/container-retention-policy@v2
        with:
          image-names: gantry
          cut-off: 1 second ago UTC
          account-type: personal
          token: ${{ secrets.TOKEN_DELETE_GHCR_IMAGES }}
          keep-at-least: 0
          untagged-only: True
          skip-tags: latest, development
          dry-run: False

  clean-ghcr:
    name: Delete old ghcr container images
    runs-on: ubuntu-latest
    steps:
      - name: Delete dev images
        uses: snok/container-retention-policy@v2
        with:
          image-names: gantry
          cut-off: One day ago UTC
          account-type: personal
          token: ${{ secrets.TOKEN_DELETE_GHCR_IMAGES }}
          keep-at-least: 5
          skip-tags: latest, development
          filter-tags: "dev-*"
          dry-run: False
