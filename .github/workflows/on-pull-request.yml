name: On pull request

on:
  pull_request:
    branches:
      - 'main'
  workflow_dispatch:

env:
  PLATFORMS: "linux/amd64,linux/arm64,linux/arm/v7"
  
jobs:
  shellcheck:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Install shellcheck
        run: sudo apt-get install -y bash shellcheck
      - name: Analyse with shellcheck
        run: |
          set -e
          shellcheck -V
          shellcheck src/*.sh tests/*.sh
          set +e

  run_tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.2.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}
      - name: Run tests
        run: |
          echo "Start running tests"
          ./tests/run_all_tests.sh "${{ github.repository }}" "ghcr.io" "${{ github.repository_owner }}" "${{ github.token }}"
          echo "Done running tests"

  clean-ghcr:
    name: Delete old ghcr container images
    runs-on: ubuntu-latest
    steps:
      - name: Delete old test images
        uses: snok/container-retention-policy@v2
        with:
          image-names: gantry
          cut-off: One hours ago UTC
          account-type: personal
          token: ${{ secrets.TOKEN_DELETE_GHCR_IMAGES }}
          keep-at-least: 1
          skip-tags: latest, development
          filter-tags: "for-test-*"
          dry-run: False
      - name: Delete untagged images
        uses: snok/container-retention-policy@v2
        with:
          image-names: gantry
          cut-off: One hour ago UTC
          account-type: personal
          token: ${{ secrets.TOKEN_DELETE_GHCR_IMAGES }}
          keep-at-least: 0
          untagged-only: True
          skip-tags: latest, development
          dry-run: False
