name: On pull request

on:
  pull_request:
    branches:
      - 'main'
  workflow_dispatch:
 
jobs:
  shellcheck:
    name: shellcheck
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Install shellcheck
        run: sudo apt-get install -y bash shellcheck
      - name: Analyse with shellcheck
        run: |
          set -e
          shellcheck -V
          shellcheck src/*.sh tests/*.sh
          set +e

  tests:
    name: Run tests
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        test_suit:
          - test_new_image_
          - test_SERVICES_
          - test_jobs_
          - test_MANIFEST_
          - test_no_running_tasks_
          - test_rollback_
          - test_options_
          - test_login_
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.7.0
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2.2.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ github.token }}
      - name: Run tests
        run: |
          export GANTRY_TEST_ENABLE_TESTS="${{ matrix.test_suit }}"
          ./tests/run_all_tests.sh "${{ github.repository }}" "ghcr.io" "${{ github.repository_owner }}" "${{ github.token }}"

  clean-ghcr-tests:
    name: Delete old tests container images
    runs-on: ubuntu-latest
    needs:
      - tests
    steps:
      - name: Delete old test images
        uses: snok/container-retention-policy@v2
        with:
          image-names: gantry
          # leave some margins in case multiple actions run in parallel
          cut-off: 5 minutes ago UTC
          account-type: personal
          token: ${{ secrets.TOKEN_DELETE_GHCR_IMAGES }}
          keep-at-least: 0
          skip-tags: latest, development
          filter-tags: "for-test-*"
          dry-run: False
      - name: Delete untagged images
        uses: snok/container-retention-policy@v2
        with:
          image-names: gantry
          cut-off: 1 second ago UTC
          account-type: personal
          token: ${{ secrets.TOKEN_DELETE_GHCR_IMAGES }}
          keep-at-least: 0
          untagged-only: True
          skip-tags: latest, development
          dry-run: False